//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "AIRPORT_CITY_FK", "CITY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Connection.CITY), "AIRPORT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Connection.AIRPORT), true)]
[assembly: EdmRelationshipAttribute("Model", "CONNECTION_FROM_AIRPORT_FK", "AIRPORT", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Connection.AIRPORT), "CONNECTION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Connection.CONNECTION), true)]
[assembly: EdmRelationshipAttribute("Model", "CONNECTION_TO_AIRPORT_FK", "AIRPORT", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Connection.AIRPORT), "CONNECTION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Connection.CONNECTION), true)]
[assembly: EdmRelationshipAttribute("Model", "CITY_COUNTRY_FK", "COUNTRY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Connection.COUNTRY), "CITY", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Connection.CITY), true)]
[assembly: EdmRelationshipAttribute("Model", "FLY_CONNECTION_FK", "CONNECTION", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Connection.CONNECTION), "FLY", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Connection.FLY), true)]
[assembly: EdmRelationshipAttribute("Model", "RESERVATION_FLY_FK", "FLY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Connection.FLY), "RESERVATION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Connection.RESERVATION), true)]

#endregion

namespace Connection
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DBConnection : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DBConnection object using the connection string found in the 'DBConnection' section of the application configuration file.
        /// </summary>
        public DBConnection() : base("name=DBConnection", "DBConnection")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DBConnection object.
        /// </summary>
        public DBConnection(string connectionString) : base(connectionString, "DBConnection")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DBConnection object.
        /// </summary>
        public DBConnection(EntityConnection connection) : base(connection, "DBConnection")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AIRPORT> AIRPORT
        {
            get
            {
                if ((_AIRPORT == null))
                {
                    _AIRPORT = base.CreateObjectSet<AIRPORT>("AIRPORT");
                }
                return _AIRPORT;
            }
        }
        private ObjectSet<AIRPORT> _AIRPORT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CITY> CITY
        {
            get
            {
                if ((_CITY == null))
                {
                    _CITY = base.CreateObjectSet<CITY>("CITY");
                }
                return _CITY;
            }
        }
        private ObjectSet<CITY> _CITY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CONNECTION> CONNECTION
        {
            get
            {
                if ((_CONNECTION == null))
                {
                    _CONNECTION = base.CreateObjectSet<CONNECTION>("CONNECTION");
                }
                return _CONNECTION;
            }
        }
        private ObjectSet<CONNECTION> _CONNECTION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<COUNTRY> COUNTRY
        {
            get
            {
                if ((_COUNTRY == null))
                {
                    _COUNTRY = base.CreateObjectSet<COUNTRY>("COUNTRY");
                }
                return _COUNTRY;
            }
        }
        private ObjectSet<COUNTRY> _COUNTRY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FLY> FLY
        {
            get
            {
                if ((_FLY == null))
                {
                    _FLY = base.CreateObjectSet<FLY>("FLY");
                }
                return _FLY;
            }
        }
        private ObjectSet<FLY> _FLY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RESERVATION> RESERVATION
        {
            get
            {
                if ((_RESERVATION == null))
                {
                    _RESERVATION = base.CreateObjectSet<RESERVATION>("RESERVATION");
                }
                return _RESERVATION;
            }
        }
        private ObjectSet<RESERVATION> _RESERVATION;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AIRPORT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAIRPORT(AIRPORT aIRPORT)
        {
            base.AddObject("AIRPORT", aIRPORT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CITY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCITY(CITY cITY)
        {
            base.AddObject("CITY", cITY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CONNECTION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCONNECTION(CONNECTION cONNECTION)
        {
            base.AddObject("CONNECTION", cONNECTION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the COUNTRY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCOUNTRY(COUNTRY cOUNTRY)
        {
            base.AddObject("COUNTRY", cOUNTRY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FLY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFLY(FLY fLY)
        {
            base.AddObject("FLY", fLY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RESERVATION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRESERVATION(RESERVATION rESERVATION)
        {
            base.AddObject("RESERVATION", rESERVATION);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="AIRPORT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AIRPORT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AIRPORT object.
        /// </summary>
        /// <param name="sYMBOL">Initial value of the SYMBOL property.</param>
        /// <param name="cITY_ID">Initial value of the CITY_ID property.</param>
        /// <param name="nAME">Initial value of the NAME property.</param>
        public static AIRPORT CreateAIRPORT(global::System.String sYMBOL, global::System.Decimal cITY_ID, global::System.String nAME)
        {
            AIRPORT aIRPORT = new AIRPORT();
            aIRPORT.SYMBOL = sYMBOL;
            aIRPORT.CITY_ID = cITY_ID;
            aIRPORT.NAME = nAME;
            return aIRPORT;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SYMBOL
        {
            get
            {
                return _SYMBOL;
            }
            set
            {
                if (_SYMBOL != value)
                {
                    OnSYMBOLChanging(value);
                    ReportPropertyChanging("SYMBOL");
                    _SYMBOL = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SYMBOL");
                    OnSYMBOLChanged();
                }
            }
        }
        private global::System.String _SYMBOL;
        partial void OnSYMBOLChanging(global::System.String value);
        partial void OnSYMBOLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CITY_ID
        {
            get
            {
                return _CITY_ID;
            }
            set
            {
                OnCITY_IDChanging(value);
                ReportPropertyChanging("CITY_ID");
                _CITY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CITY_ID");
                OnCITY_IDChanged();
            }
        }
        private global::System.Decimal _CITY_ID;
        partial void OnCITY_IDChanging(global::System.Decimal value);
        partial void OnCITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "AIRPORT_CITY_FK", "CITY")]
        public CITY CITY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CITY>("Model.AIRPORT_CITY_FK", "CITY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CITY>("Model.AIRPORT_CITY_FK", "CITY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CITY> CITYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CITY>("Model.AIRPORT_CITY_FK", "CITY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CITY>("Model.AIRPORT_CITY_FK", "CITY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "CONNECTION_FROM_AIRPORT_FK", "CONNECTION")]
        public EntityCollection<CONNECTION> CONNECTION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CONNECTION>("Model.CONNECTION_FROM_AIRPORT_FK", "CONNECTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CONNECTION>("Model.CONNECTION_FROM_AIRPORT_FK", "CONNECTION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "CONNECTION_TO_AIRPORT_FK", "CONNECTION")]
        public EntityCollection<CONNECTION> CONNECTION1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CONNECTION>("Model.CONNECTION_TO_AIRPORT_FK", "CONNECTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CONNECTION>("Model.CONNECTION_TO_AIRPORT_FK", "CONNECTION", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="CITY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CITY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CITY object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="nAME">Initial value of the NAME property.</param>
        /// <param name="cOUNTRY_ID">Initial value of the COUNTRY_ID property.</param>
        public static CITY CreateCITY(global::System.Decimal id, global::System.String nAME, global::System.Decimal cOUNTRY_ID)
        {
            CITY cITY = new CITY();
            cITY.ID = id;
            cITY.NAME = nAME;
            cITY.COUNTRY_ID = cOUNTRY_ID;
            return cITY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Decimal _ID;
        partial void OnIDChanging(global::System.Decimal value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal COUNTRY_ID
        {
            get
            {
                return _COUNTRY_ID;
            }
            set
            {
                OnCOUNTRY_IDChanging(value);
                ReportPropertyChanging("COUNTRY_ID");
                _COUNTRY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("COUNTRY_ID");
                OnCOUNTRY_IDChanged();
            }
        }
        private global::System.Decimal _COUNTRY_ID;
        partial void OnCOUNTRY_IDChanging(global::System.Decimal value);
        partial void OnCOUNTRY_IDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "AIRPORT_CITY_FK", "AIRPORT")]
        public EntityCollection<AIRPORT> AIRPORT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AIRPORT>("Model.AIRPORT_CITY_FK", "AIRPORT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AIRPORT>("Model.AIRPORT_CITY_FK", "AIRPORT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "CITY_COUNTRY_FK", "COUNTRY")]
        public COUNTRY COUNTRY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COUNTRY>("Model.CITY_COUNTRY_FK", "COUNTRY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COUNTRY>("Model.CITY_COUNTRY_FK", "COUNTRY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COUNTRY> COUNTRYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COUNTRY>("Model.CITY_COUNTRY_FK", "COUNTRY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COUNTRY>("Model.CITY_COUNTRY_FK", "COUNTRY", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="CONNECTION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CONNECTION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CONNECTION object.
        /// </summary>
        /// <param name="sYMBOL">Initial value of the SYMBOL property.</param>
        /// <param name="dEPARTURE_TIME">Initial value of the DEPARTURE_TIME property.</param>
        /// <param name="aRIVAL_TIME">Initial value of the ARIVAL_TIME property.</param>
        /// <param name="wEEKDAY">Initial value of the WEEKDAY property.</param>
        /// <param name="pRICE">Initial value of the PRICE property.</param>
        /// <param name="tICKETS">Initial value of the TICKETS property.</param>
        /// <param name="fROM_AIRPORT_SYMBOL">Initial value of the FROM_AIRPORT_SYMBOL property.</param>
        /// <param name="tO_AIRPORT_SYMBOL">Initial value of the TO_AIRPORT_SYMBOL property.</param>
        public static CONNECTION CreateCONNECTION(global::System.String sYMBOL, global::System.DateTime dEPARTURE_TIME, global::System.DateTime aRIVAL_TIME, global::System.String wEEKDAY, global::System.Decimal pRICE, global::System.Decimal tICKETS, global::System.String fROM_AIRPORT_SYMBOL, global::System.String tO_AIRPORT_SYMBOL)
        {
            CONNECTION cONNECTION = new CONNECTION();
            cONNECTION.SYMBOL = sYMBOL;
            cONNECTION.DEPARTURE_TIME = dEPARTURE_TIME;
            cONNECTION.ARIVAL_TIME = aRIVAL_TIME;
            cONNECTION.WEEKDAY = wEEKDAY;
            cONNECTION.PRICE = pRICE;
            cONNECTION.TICKETS = tICKETS;
            cONNECTION.FROM_AIRPORT_SYMBOL = fROM_AIRPORT_SYMBOL;
            cONNECTION.TO_AIRPORT_SYMBOL = tO_AIRPORT_SYMBOL;
            return cONNECTION;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SYMBOL
        {
            get
            {
                return _SYMBOL;
            }
            set
            {
                if (_SYMBOL != value)
                {
                    OnSYMBOLChanging(value);
                    ReportPropertyChanging("SYMBOL");
                    _SYMBOL = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SYMBOL");
                    OnSYMBOLChanged();
                }
            }
        }
        private global::System.String _SYMBOL;
        partial void OnSYMBOLChanging(global::System.String value);
        partial void OnSYMBOLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DEPARTURE_TIME
        {
            get
            {
                return _DEPARTURE_TIME;
            }
            set
            {
                OnDEPARTURE_TIMEChanging(value);
                ReportPropertyChanging("DEPARTURE_TIME");
                _DEPARTURE_TIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEPARTURE_TIME");
                OnDEPARTURE_TIMEChanged();
            }
        }
        private global::System.DateTime _DEPARTURE_TIME;
        partial void OnDEPARTURE_TIMEChanging(global::System.DateTime value);
        partial void OnDEPARTURE_TIMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ARIVAL_TIME
        {
            get
            {
                return _ARIVAL_TIME;
            }
            set
            {
                OnARIVAL_TIMEChanging(value);
                ReportPropertyChanging("ARIVAL_TIME");
                _ARIVAL_TIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ARIVAL_TIME");
                OnARIVAL_TIMEChanged();
            }
        }
        private global::System.DateTime _ARIVAL_TIME;
        partial void OnARIVAL_TIMEChanging(global::System.DateTime value);
        partial void OnARIVAL_TIMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WEEKDAY
        {
            get
            {
                return _WEEKDAY;
            }
            set
            {
                OnWEEKDAYChanging(value);
                ReportPropertyChanging("WEEKDAY");
                _WEEKDAY = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WEEKDAY");
                OnWEEKDAYChanged();
            }
        }
        private global::System.String _WEEKDAY;
        partial void OnWEEKDAYChanging(global::System.String value);
        partial void OnWEEKDAYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PRICE
        {
            get
            {
                return _PRICE;
            }
            set
            {
                OnPRICEChanging(value);
                ReportPropertyChanging("PRICE");
                _PRICE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRICE");
                OnPRICEChanged();
            }
        }
        private global::System.Decimal _PRICE;
        partial void OnPRICEChanging(global::System.Decimal value);
        partial void OnPRICEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TICKETS
        {
            get
            {
                return _TICKETS;
            }
            set
            {
                OnTICKETSChanging(value);
                ReportPropertyChanging("TICKETS");
                _TICKETS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TICKETS");
                OnTICKETSChanged();
            }
        }
        private global::System.Decimal _TICKETS;
        partial void OnTICKETSChanging(global::System.Decimal value);
        partial void OnTICKETSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FROM_AIRPORT_SYMBOL
        {
            get
            {
                return _FROM_AIRPORT_SYMBOL;
            }
            set
            {
                OnFROM_AIRPORT_SYMBOLChanging(value);
                ReportPropertyChanging("FROM_AIRPORT_SYMBOL");
                _FROM_AIRPORT_SYMBOL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FROM_AIRPORT_SYMBOL");
                OnFROM_AIRPORT_SYMBOLChanged();
            }
        }
        private global::System.String _FROM_AIRPORT_SYMBOL;
        partial void OnFROM_AIRPORT_SYMBOLChanging(global::System.String value);
        partial void OnFROM_AIRPORT_SYMBOLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TO_AIRPORT_SYMBOL
        {
            get
            {
                return _TO_AIRPORT_SYMBOL;
            }
            set
            {
                OnTO_AIRPORT_SYMBOLChanging(value);
                ReportPropertyChanging("TO_AIRPORT_SYMBOL");
                _TO_AIRPORT_SYMBOL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TO_AIRPORT_SYMBOL");
                OnTO_AIRPORT_SYMBOLChanged();
            }
        }
        private global::System.String _TO_AIRPORT_SYMBOL;
        partial void OnTO_AIRPORT_SYMBOLChanging(global::System.String value);
        partial void OnTO_AIRPORT_SYMBOLChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "CONNECTION_FROM_AIRPORT_FK", "AIRPORT")]
        public AIRPORT AIRPORT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AIRPORT>("Model.CONNECTION_FROM_AIRPORT_FK", "AIRPORT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AIRPORT>("Model.CONNECTION_FROM_AIRPORT_FK", "AIRPORT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AIRPORT> AIRPORTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AIRPORT>("Model.CONNECTION_FROM_AIRPORT_FK", "AIRPORT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AIRPORT>("Model.CONNECTION_FROM_AIRPORT_FK", "AIRPORT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "CONNECTION_TO_AIRPORT_FK", "AIRPORT")]
        public AIRPORT AIRPORT1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AIRPORT>("Model.CONNECTION_TO_AIRPORT_FK", "AIRPORT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AIRPORT>("Model.CONNECTION_TO_AIRPORT_FK", "AIRPORT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AIRPORT> AIRPORT1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AIRPORT>("Model.CONNECTION_TO_AIRPORT_FK", "AIRPORT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AIRPORT>("Model.CONNECTION_TO_AIRPORT_FK", "AIRPORT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FLY_CONNECTION_FK", "FLY")]
        public EntityCollection<FLY> FLY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FLY>("Model.FLY_CONNECTION_FK", "FLY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FLY>("Model.FLY_CONNECTION_FK", "FLY", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="COUNTRY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COUNTRY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new COUNTRY object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="nAME">Initial value of the NAME property.</param>
        public static COUNTRY CreateCOUNTRY(global::System.Decimal id, global::System.String nAME)
        {
            COUNTRY cOUNTRY = new COUNTRY();
            cOUNTRY.ID = id;
            cOUNTRY.NAME = nAME;
            return cOUNTRY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Decimal _ID;
        partial void OnIDChanging(global::System.Decimal value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "CITY_COUNTRY_FK", "CITY")]
        public EntityCollection<CITY> CITY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CITY>("Model.CITY_COUNTRY_FK", "CITY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CITY>("Model.CITY_COUNTRY_FK", "CITY", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="FLY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FLY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FLY object.
        /// </summary>
        /// <param name="sYMBOL">Initial value of the SYMBOL property.</param>
        /// <param name="fLY_DATE">Initial value of the FLY_DATE property.</param>
        /// <param name="cONNECTION_SYMBOL">Initial value of the CONNECTION_SYMBOL property.</param>
        /// <param name="fREE_PLACES_NUMBER">Initial value of the FREE_PLACES_NUMBER property.</param>
        public static FLY CreateFLY(global::System.String sYMBOL, global::System.DateTime fLY_DATE, global::System.String cONNECTION_SYMBOL, global::System.Decimal fREE_PLACES_NUMBER)
        {
            FLY fLY = new FLY();
            fLY.SYMBOL = sYMBOL;
            fLY.FLY_DATE = fLY_DATE;
            fLY.CONNECTION_SYMBOL = cONNECTION_SYMBOL;
            fLY.FREE_PLACES_NUMBER = fREE_PLACES_NUMBER;
            return fLY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SYMBOL
        {
            get
            {
                return _SYMBOL;
            }
            set
            {
                if (_SYMBOL != value)
                {
                    OnSYMBOLChanging(value);
                    ReportPropertyChanging("SYMBOL");
                    _SYMBOL = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SYMBOL");
                    OnSYMBOLChanged();
                }
            }
        }
        private global::System.String _SYMBOL;
        partial void OnSYMBOLChanging(global::System.String value);
        partial void OnSYMBOLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FLY_DATE
        {
            get
            {
                return _FLY_DATE;
            }
            set
            {
                OnFLY_DATEChanging(value);
                ReportPropertyChanging("FLY_DATE");
                _FLY_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FLY_DATE");
                OnFLY_DATEChanged();
            }
        }
        private global::System.DateTime _FLY_DATE;
        partial void OnFLY_DATEChanging(global::System.DateTime value);
        partial void OnFLY_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CONNECTION_SYMBOL
        {
            get
            {
                return _CONNECTION_SYMBOL;
            }
            set
            {
                OnCONNECTION_SYMBOLChanging(value);
                ReportPropertyChanging("CONNECTION_SYMBOL");
                _CONNECTION_SYMBOL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CONNECTION_SYMBOL");
                OnCONNECTION_SYMBOLChanged();
            }
        }
        private global::System.String _CONNECTION_SYMBOL;
        partial void OnCONNECTION_SYMBOLChanging(global::System.String value);
        partial void OnCONNECTION_SYMBOLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FREE_PLACES_NUMBER
        {
            get
            {
                return _FREE_PLACES_NUMBER;
            }
            set
            {
                OnFREE_PLACES_NUMBERChanging(value);
                ReportPropertyChanging("FREE_PLACES_NUMBER");
                _FREE_PLACES_NUMBER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FREE_PLACES_NUMBER");
                OnFREE_PLACES_NUMBERChanged();
            }
        }
        private global::System.Decimal _FREE_PLACES_NUMBER;
        partial void OnFREE_PLACES_NUMBERChanging(global::System.Decimal value);
        partial void OnFREE_PLACES_NUMBERChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FLY_CONNECTION_FK", "CONNECTION")]
        public CONNECTION CONNECTION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CONNECTION>("Model.FLY_CONNECTION_FK", "CONNECTION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CONNECTION>("Model.FLY_CONNECTION_FK", "CONNECTION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CONNECTION> CONNECTIONReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CONNECTION>("Model.FLY_CONNECTION_FK", "CONNECTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CONNECTION>("Model.FLY_CONNECTION_FK", "CONNECTION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RESERVATION_FLY_FK", "RESERVATION")]
        public EntityCollection<RESERVATION> RESERVATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RESERVATION>("Model.RESERVATION_FLY_FK", "RESERVATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RESERVATION>("Model.RESERVATION_FLY_FK", "RESERVATION", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="RESERVATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RESERVATION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RESERVATION object.
        /// </summary>
        /// <param name="sYMBOL">Initial value of the SYMBOL property.</param>
        /// <param name="fLY_SYMBOL">Initial value of the FLY_SYMBOL property.</param>
        public static RESERVATION CreateRESERVATION(global::System.String sYMBOL, global::System.String fLY_SYMBOL)
        {
            RESERVATION rESERVATION = new RESERVATION();
            rESERVATION.SYMBOL = sYMBOL;
            rESERVATION.FLY_SYMBOL = fLY_SYMBOL;
            return rESERVATION;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SYMBOL
        {
            get
            {
                return _SYMBOL;
            }
            set
            {
                if (_SYMBOL != value)
                {
                    OnSYMBOLChanging(value);
                    ReportPropertyChanging("SYMBOL");
                    _SYMBOL = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SYMBOL");
                    OnSYMBOLChanged();
                }
            }
        }
        private global::System.String _SYMBOL;
        partial void OnSYMBOLChanging(global::System.String value);
        partial void OnSYMBOLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PLACE_NUMBER
        {
            get
            {
                return _PLACE_NUMBER;
            }
            set
            {
                OnPLACE_NUMBERChanging(value);
                ReportPropertyChanging("PLACE_NUMBER");
                _PLACE_NUMBER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PLACE_NUMBER");
                OnPLACE_NUMBERChanged();
            }
        }
        private global::System.String _PLACE_NUMBER;
        partial void OnPLACE_NUMBERChanging(global::System.String value);
        partial void OnPLACE_NUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> IS_PAID
        {
            get
            {
                return _IS_PAID;
            }
            set
            {
                OnIS_PAIDChanging(value);
                ReportPropertyChanging("IS_PAID");
                _IS_PAID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IS_PAID");
                OnIS_PAIDChanged();
            }
        }
        private Nullable<global::System.Int16> _IS_PAID;
        partial void OnIS_PAIDChanging(Nullable<global::System.Int16> value);
        partial void OnIS_PAIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FLY_SYMBOL
        {
            get
            {
                return _FLY_SYMBOL;
            }
            set
            {
                OnFLY_SYMBOLChanging(value);
                ReportPropertyChanging("FLY_SYMBOL");
                _FLY_SYMBOL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FLY_SYMBOL");
                OnFLY_SYMBOLChanged();
            }
        }
        private global::System.String _FLY_SYMBOL;
        partial void OnFLY_SYMBOLChanging(global::System.String value);
        partial void OnFLY_SYMBOLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CLIENT_ID
        {
            get
            {
                return _CLIENT_ID;
            }
            set
            {
                OnCLIENT_IDChanging(value);
                ReportPropertyChanging("CLIENT_ID");
                _CLIENT_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CLIENT_ID");
                OnCLIENT_IDChanged();
            }
        }
        private Nullable<global::System.Decimal> _CLIENT_ID;
        partial void OnCLIENT_IDChanging(Nullable<global::System.Decimal> value);
        partial void OnCLIENT_IDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RESERVATION_FLY_FK", "FLY")]
        public FLY FLY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FLY>("Model.RESERVATION_FLY_FK", "FLY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FLY>("Model.RESERVATION_FLY_FK", "FLY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FLY> FLYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FLY>("Model.RESERVATION_FLY_FK", "FLY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FLY>("Model.RESERVATION_FLY_FK", "FLY", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
